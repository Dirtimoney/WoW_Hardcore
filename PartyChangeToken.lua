-- Generated by party change requester
function GeneratePartyChangeTokenSecret()
	return GetServerTime()
end

-- Generated by party change receiver
function GeneratePartyChangeToken(_hardcore_settings, _hardcore_character, _secret, _partner_to_change)
	_hardcore_settings.party_change_token = {
		partner_to_change = _partner_to_change,
		character_name = UnitName("player"),
		generated_time = GetServerTime(), -- since epoch
		secret = _secret,
	}
	Hardcore:Print("Generated Party Change Token.")
end

-- Applied by party change receiver
function ApplyPartyChangeToken(_hardcore_settings, _hardcore_character, sender, secret)
	if _hardcore_settings.party_change_token == nil then
		Hardcore:Print("PartyChange Token does not exist.")
		return
	end

	if
		_hardcore_settings.party_change_token.character_name == nil
		or _hardcore_settings.party_change_token.character_name ~= UnitName("player")
	then
		Hardcore:Print(
			"Current party change token is for character "
				.. _hardcore_settings.party_change_token.character_name(".  Current character is ")
				.. UnitName("player")
		)
		return
	end

	if
		_hardcore_settings.party_change_token.secret == nil
		or _hardcore_settings.party_change_token.secret ~= secret
	then
		Hardcore:Print("Invalid secret for party change token.  Did not apply token.")
		return
	end

	local found_partner = false
	for idx, partner in ipairs(_hardcore_character.team) do
		if partner == Hardcore_Settings.party_change_token.partner_to_change then
			_hardcore_character.team[idx] = sender
			Hardcore:Print("Applied party change token to " .. partner .. ". New partner is " .. sender)
			return
		end
	end
end

-- Checked by party change receiver
function CheckForExpiredPartyChangeToken(_hardcore_settings)
	if _hardcore_settings.party_change_token == nil then
		return
	end

	local current_time = GetServerTime()
	if current_time - _hardcore_settings.party_change_token.generated_time > 24 * 60 * 60 then -- one day
		_hardcore_settings.party_change_token = nil
		Hardcore:Print("Party Change Token expired.")
	end
end
